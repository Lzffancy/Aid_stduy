"""
    异常处理
        现象:不再向下执行,而是不断向上返回.
        本质:快速传递错误消息
            raise XXXX()  --> try except
        目标:保障程序按照既定流程执行
    生成器
        惰性操作/延迟操作:
            不立即执行程序,不将多个结果存储容器;
            而是在使用时(for -- next)循环一次计算一次返回一次.
        生成器函数
            def 函数名():
                ....
                yield 数据
                ....

            # 调用函数不执行函数体,而是创建生成器(迭代器)对象
            生成器对象 = 函数名()
            for 变量 in 生成器对象:
                变量就是yield返回的数据
    迭代
        迭代器:执行迭代过程
            class 迭代器:
                def __next__():
                    ...
                    return 数据
        可迭代对象:能够参与for循环
            class 可迭代对象:
                def __iter__():
                    return 迭代器()
"""