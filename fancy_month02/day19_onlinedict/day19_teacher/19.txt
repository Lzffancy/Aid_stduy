前情回顾

1.  项目开发流程

     需求文档   概要设计  详细设计文档   说明文档

     思维导图   流程图   甘特

2. git使用

    介绍 : 特点   安装   配置   分区

    基本命令 ：  git init
               git add/mv/rm
               git commit
               git status
               git log
               git checkout --

    版本控制 ： git log  /  git reflog
              git reset --hard
              git tag

    分支管理 ： git branch
              git checkout
              git merge

              冲突

3. github使用  ： 删除仓库  查找项目  配置ssh

   获取项目:
   git clone  ...
   git pull

   连接远程上传项目：
   git remote add origin ......
   git push -u origin master
   git push
   git pull


在线词典分析：

1. 需求分析

2. 技术分析

   * 使用什么网络并发： tcp 多进程并发
   * 两个界面该如何相互配合  demo.py
   * 存储 :  数据库  dict--> words

      words -> id   word   mean

      user -> id   name  passwd

      create table user (
      id int primary key auto_increment,
      name varchar(30) not null unique comment "不能重名",
      passwd char(64) not null);

      hist -> id   word  time  user_id

      create table hist (
      id int primary key auto_increment,
      word char(30),
      time datetime default now(),
      user_id int,
      foreign key (user_id) references user(id)
      );

      备用方案：hist -> id   user_id  words_id  time


3. 功能划分和封装结构设计 （类）

      C  ->   View

      S  ->   MC   数据处理  逻辑控制

     注册
     登录
     查单词
     历史记录

4. 网络通信协议
             请求类型      请求内容
   注册         R        name  passwd
   登录         L        name  passwd
   查单词       Q         name   word
   历史记录      H        name
   退出         E

   响应：
     注册  ：   OK    FAIL
     登录  :    OK    FAIL
     查单词
     历史记录

5. 具体逻辑设计

    搭建结构

     注册
        客户端： 输入用户名密码
                发送请求
                等待结果
                ＯＫ　：成功
                FAIl : 失败

        服务端　：　接收请求解析
        　　　　　　判断用户是否存在　发送结果
        　　　　　　OK ：插入数据库
                  FAIL：
        　　　　　　
        　　　　　　


     登录
     退出

     查单词
        客户端 ： 发送单词
                 得到结果 （解释  not found）
                 打印结果

        服务端 ： 接收请求，解析
                 数据库查询
                 发送结果
                 添加历史记录



     历史记录



cookie

数据库查询区分密码大小写： binary
select * from class where name="Lily";

import hashlib
def hash_encrytion(passwd):
    hash = hashlib.sha256(b"#*)^#")
    hash.update(passwd.encode())
    return hash.hexdigest()

Linux 操作系统使用总结

理论知识:
  1.操作系统的作用
  2.Linux操作系统的特点和应用

掌握知识:
  1. Linux 文件结构特点
  2. 熟练使用 Linux系统进行开发工作

实操内容:
  1. 文件的路径表达方法
  2. 基础的Linux命令使用   cat ls cd mv cp ..
  3. 常用的Linux功能
      压缩包处理
      软件安装
      用户创建
      vi 编辑器使用
  4. 远程操作Linux服务器
  5. 能够在服务器环境启动运行Python程序

<鸟哥私房菜>

熟练完成Linux环境下的开发工作


数据管理部分总结

文件处理

 文件读写（重点）： open()  read()/write()  close()

 正则表达式 ：　元字符　re模块　　

数据库管理
　
　mysql特点，关系型数据库概念  （了解）

  sql语句基础(必会)：创建表 创建库  增删改查  索引聚合  高级查询  关联查询

  表的设计（难点）: 表关系和外键设计 注意优化

  其他模块化知识（知道）： 函数存储过程  视图  事务  用户配置

熟练使用mysql，redis等数据库进行开发工作

精通数据库建设，能够熟练使用关系型和NoSQL进行数据业务模型搭建


后端核心编程部分总结

1. 网络通信

   网络基础知识
   tcp套接字编程 （重点）
   udp套接字编程 （重点）

   理论问题： 1.OSI七层模型 和 TCP/IP模型
            2.三次握手和四次挥手
            3.tcp和udp传输的区别

2. 进程线程

   进程的概念
   进程的创建 （重点，难点）
   线程的创建 （重点）
   线程基本概念 ： 同步互斥  GIL

   理论问题 ： 对比进程和线程

3. IO

   阻塞IO 非阻塞IO
   IO多路复用: select epoll （重点，难点）

   理论问题 ： HTTP协议和网页访问过程

4. 并发网络模型

   多进程多线程模型 （重点）

   IO并发模型 （重点）

5. 综合代码

   * 聊天室 ： udp套接字，进程  循环网络模型
   * ftp文件服务 ： tcp套接字  多线程并发模型
   * webserver ： tcp + http  io并发模型
   * 在线词典 ： tcp  多进程并发  数据库  MVC

6. GIT 和  github使用

《图解HTTP》
《图解TCP/IP》
《Python核心编程 第三版》

精通后端常见编程方法，如套接字，进程线程，IO模型

