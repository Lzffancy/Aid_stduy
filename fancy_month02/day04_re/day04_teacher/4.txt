前情回顾

1. 文件和字节串

   文件 :  文本   二进制
   字节串 :  bytes  encode()  decode()

2. 文件操作
   open() --> read()/write() --> close()

   r  w  a  +  b

3. 文件读写细节

   缓冲区 :  flush()   行缓冲

   文件偏移量 : seek()

4. import os

   os.path.getsize()
   os.listdir()


正则表达式匹配练习
1. 匹配到以大写字母开头的单词
Hi,Jame. How are you!

In [25]: re.findall('[A-Z][a-z]*',"Hi,Jame. How a
    ...: re you!")
Out[25]: ['Hi', 'Jame', 'How']

2. 匹配出文字中的数字

-12度气温，183的战士背着30kg装备

In [30]: re.findall('-?[0-9]+',"-12度气温，183的
    ...: 战士背着30kg装备")
Out[30]: ['-12', '183', '30']

3. 匹配手机号码
张三：15100317755 李四：13845678931

In [32]: re.findall('1[3578][0-9]{9}',"张三：1510
    ...: 0317755 李四：13845678931")
Out[32]: ['15100317755', '13845678931']

In [13]: re.findall(r'1[3578][0-9]{9}\b',"张三：1
    ...: 5100317755 李四：131081199901011050")
Out[13]: ['15100317755']

4. 匹配qq号码 (6-11)
张三：554653189 李四：1253236997

In [2]: re.findall('[1-9][0-9]{5,10}',"张三：5546
   ...: 53189 李四：1253236997")
Out[2]: ['554653189', '1253236997']

5. 匹配一组数字
13  9  -4  3.14  -2.6

In [16]: re.findall('-?\d+\.?\d*',"13  9  -4  3.1
    ...: 4  -2.6")
Out[16]: ['13', '9', '-4', '3.14', '-2.6']

6. 匹配薪资
   日薪： $150

In [18]: re.findall('\$\d+',"日薪： $150")
Out[18]: ['$150']

7. 匹配下列图书的名字　
　《奥特曼 ～ 迪迦》 《心爱口红 @ YSL》 《啦啦啦 ———— 下雪之后》

In [36]: re.findall(r'《.+?》',"《奥特曼 ～ 迪迦
    ...: 》 《心爱口红 @ YSL》 《啦啦啦 ———— 下雪
    ...: 之后》")
Out[36]: ['《奥特曼 ～ 迪迦》', '《心爱口红 @ YSL》', '《啦啦啦 ———— 下雪之后》']

8. 通过匹配想过去 李四的出生年份

   张三：1999  李四：1998  王五：1997

9. 匹配 IPv4地址

   192.168.1.6   0-255

In [53]: re.search(r'(\d{1,3}\.){3}\d{1,3}',"192.
    ...: 168.1.6").group()
Out[53]: '192.168.1.6'

10. 匹配新的身份证号

In [56]: re.search(r'\d{17}(\d|x)',"1100811999010
    ...: 1201x").group()
Out[56]: '11008119990101201x'

cookie ：
https://tool.oschina.net/regex#

文件处理训练：
基于 inet.log完成
编写程序，通过输入一个端口名称（每段首个单词）
打印出这个端口描述信息中的address is 的值

提示： 段落之间有空行
      端口名称是每段第一个单词

作业 ： 1.正则表达式元字符熟悉
       2.课上练习 ，自己再写一下