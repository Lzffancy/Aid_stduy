import numpy as np

X = np.array([-0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
Y = np.array([13.1441, 11.5536, 10.1961, 9.0416, 8.0625, 7.2336, 6.5321, 5.9376, 5.4321, 5.0, 4.6281, 4.3056, 4.0241, 3.7776, 3.5625, 3.3776, 3.2241, 3.1056, 3.0281, 3.0])

o,p,q,r,s,t = 0,0,0,0,0,0
e = [0]*6
for repeat in range(1,1001):
    for i in range(20):
        e[0] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        o += e[0]
        e[1] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        p += e[1]
        e[2] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        q += e[2]
        e[3] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        r += e[3]
        e[4] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        s += e[4]
        e[5] = Y[i]-o*X[i]**5-p*X[i]**4-q*X[i]**3-r*X[i]**2-s*X[i]-t
        t += e[5]
    dev = Y-o*X**5-p*X**4-q*X**3-r*X**2-s*X-t
    if repeat % 50 == 0 or repeat <= 10:
        print ('调整次数：%d'%repeat,' 确信度： '+str((1-np.std(dev))*100)+'%')
print ('拟合函数的参数：o=%f，p=%f，q=%f，r=%f，s=%f，t=%f'%(o,p,q,r,s,t))